name: Release
'on':
  release:
    - published
jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - ubuntu-20.04
          - windows-latest
    runs-on: '${{ matrix.platform }}'
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Rust Environment (Windows Only)
        if: matrix.platform == 'windows-latest'
        run: |
          rustup target add i686-pc-windows-msvc
          rustup target add x86_64-pc-windows-msvc
      - name: Prepare Rust Environment (macOS Only)
        if: matrix.platform == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin
      - name: Prepare Node Environment
        uses: actions/setup-node@v2
        with:
          node-version: 17
          cache: npm
      - name: Install Dependencies (Ubuntu Only)
        if: matrix.platform == 'ubuntu-20.04'
        run: >
          sudo apt update 
          sudo apt install libwebkit2gtk-4.0-dev build-essential curl wget
          libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          make install-dev
      - name: Install Dependencies (macOS & Windows)
        if: matrix.platform != 'ubuntu-20.04'
        run: make install-dev
      - name: Build
        run: make build
      - name: Prepare Tauri Environment
        run: cargo install tauri-cli
      - name: Build & Package (Windows Only)
        if: matrix.platform == 'windows-latest'
        run: |
          cargo tauri build --target i686-pc-windows-msvc
          cargo tauri build --target x86_64-pc-windows-msvc
      - name: Build & Package (macOS Only)
        if: matrix.platform == 'macos-latest'
        run: |
          cargo tauri build --target aarch64-apple-darwin
          cargo tauri build --target x86_64-apple-darwin
      - name: Build & Package (Linux Only)
        if: matrix.platform == 'ubuntu-20.04'
        run: cargo tauri build
      - name: Upload Artifacts (Linux Only)
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: Linux Packages
          path: >
            /home/runner/work/syng/syng/src/native/target/release/bundle/deb/syng_2.0.0_amd64.deb
            /home/runner/work/syng/syng/src/native/target/release/bundle/appimage/syng_2.0.0_amd64.AppImage
      - name: Upload Artifacts (macOS Only)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macOS Packages
          path: >
            /Users/runner/work/syng/syng/src/native/target/x86_64-apple-darwin/release/bundle/macos/Syng.app
            /Users/runner/work/syng/syng/src/native/target/x86_64-apple-darwin/release/bundle/dmg/Syng_2.0.0_x64.dmg
            /Users/runner/work/syng/syng/src/native/target/aarch64-apple-darwin/release/bundle/macos/Syng.app
            /Users/runner/work/syng/syng/src/native/target/aarch64-apple-darwin/release/bundle/dmg/Syng_2.0.0_aarch64.dmg
      - name: Upload Artifacts (Windows Only)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: Windows Packages
          path: >
            D:\a\syng\syng\src\native\target\x86_64-pc-windows-msvc\release\bundle/msi/Syng_2.0.0_x64_en-US.msi
            D:\a\syng\syng\src\native\target\i686-pc-windows-msvc\release\bundle/msi/Syng_2.0.0_x86_en-US.msi
